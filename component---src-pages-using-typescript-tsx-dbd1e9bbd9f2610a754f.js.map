{"version":3,"file":"component---src-pages-using-typescript-tsx-dbd1e9bbd9f2610a754f.js","mappings":"oNAaA,MA+BaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAjCwDC,IAAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACD,SACCN,EAAAA,cAACO,EAAAA,EAAM,CAACL,MAAM,mBAAmBI,SAAUA,GACzCN,EAAAA,cAAAA,KAAAA,KAAI,0CACJA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,0BAAI,YAAa,+DACd,0BAAI,eAAgB,wEAGlEA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,0BAAI,cAAe,oBACxD,0BAAI,cAAe,gBAAa,0BAAI,YAAa,UAEvDA,EAAAA,cAAAA,IAAAA,KAAG,kCAC8BK,EAAK,uBAAqB,IACxDD,EAAKI,KAAKC,UAAU,KAEvBT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,8EC7BX,MATa,IACX,uBAAKC,UAAU,QACb,gBAAC,EAAAF,KAAI,CAACC,GAAG,KAAI,QACb,gBAAC,EAAAD,KAAI,CAACC,GAAG,YAAW,WACpB,gBAAC,EAAAD,KAAI,CAACC,GAAG,YAAW,WACpB,gBAAC,EAAAD,KAAI,CAACC,GAAG,YAAW,YCRxB,EAAe,IAA0B,mDCiBzC,MAZe,QAAC,MAAEV,GAAO,SACvB,0BAAQW,UAAU,iBAChB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,QACb,uBAAKA,UAAU,aAAaC,IAAKC,EAAMC,IAAI,SAC3C,gBAAC,EAAAL,KAAI,CAACC,GAAG,KAAKV,IAEhB,gBAAC,EAAI,OAEA,ECJX,MARe,IACb,0BAAQW,UAAU,UAAS,0BAEzB,KAAK,IAAII,MAAOC,cAAgB,yBCYpC,MAbe,IAAoC,IAAnC,SAAEZ,EAAQ,MAAEJ,EAAK,SAAEiB,GAAU,EAC3C,MACMC,EAD6B,MAChBd,EAASe,SAE5B,OACE,uBAAKR,UAAU,iBAAiB,oBAAmBO,GACjD,gBAAC,EAAM,CAAClB,MAAOA,IACf,4BAAOiB,GACP,gBAAC,EAAM,MACH,C,+CCsCV,IAzCY,IAAuC,IAAD,UAArC,YAAEG,EAAW,MAAEpB,EAAK,SAAEiB,GAAU,EAC3C,MAAM,KAAEX,IAASe,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBF,GAAed,EAAKiB,aAAaH,YACnDI,EAAgC,QAApB,EAAGlB,EAAKiB,oBAAY,aAAjB,EAAmBvB,MAExC,OACE,gCACE,6BAAQwB,EAAkBxB,EAAK,MAAMwB,EAAiBxB,GACtD,wBAAMyB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAS1B,IACnC,wBAAM2B,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAApB,EAAKiB,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAAS1B,IACpC,wBAAMyB,KAAK,sBAAsBC,QAASJ,IAC1C,wBAAMG,KAAK,2BAA2BC,QAAQ,gDAC9C,wBAAMI,IAAI,aAAaC,KAAK,WAAWvB,KAAK,yEAC3CS,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/menu.js","webpack://gatsby-starter-blog/./src/images/cony.png","webpack://gatsby-starter-blog/./src/components/header.js","webpack://gatsby-starter-blog/./src/components/footer.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Menu = () => (\n  <div className=\"menu\">\n    <Link to=\"/\">blog</Link>\n    <Link to=\"/profile\">profile</Link>\n    <Link to=\"/project\">project</Link>\n    <Link to=\"/seminar\">seminar</Link>\n  </div>\n)\n\nexport default Menu","export default __webpack_public_path__ + \"static/cony-21b9d603b7b46df341112559c739afae.png\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Menu from \"./menu\"\nimport cony from \"../images/cony.png\";\n\nconst Header = ({ title }) => (\n  <header className=\"global-header\">\n    <div className=\"main-heading\">\n      <div className=\"logo\">\n        <img className=\"bio-avatar\" src={cony} alt=\"logo\" />\n        <Link to=\"/\">{title}</Link>\n      </div>\n      <Menu />\n    </div>\n  </header>\n)\n\nexport default Header","import * as React from \"react\"\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    Copyright Â© Jayoon Kong\n    {` ${new Date().getFullYear()}`},\n    all right reserved.\n  </footer>\n)\n\nexport default Footer","import * as React from \"react\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <Header title={title} />\n      <main>{children}</main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"google-site-verification\" content=\"vMqBtqtAuaCt-E77Hy3kVwYFp3Ve9kaAMI1cBnYSfa4\" />\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/moonspam/NanumSquare@2.0/nanumsquare.css\"></link>\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","className","src","cony","alt","Date","getFullYear","children","isRootPath","pathname","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","rel","type"],"sourceRoot":""}
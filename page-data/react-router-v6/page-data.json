{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-router-v6/","result":{"data":{"site":{"siteMetadata":{"title":"공자윤의 기술블로그"}},"markdownRemark":{"id":"42cab30b-e464-5d0f-a697-6151a7077207","excerpt":"현재 수행 중인 프로젝트(React)에 테스트 코드를 도입하기 위해서 공부하고 있습니다. react-testing-library라는, 이름에서도 유추할 수 있듯이 react…","html":"<p>현재 수행 중인 프로젝트(React)에 테스트 코드를 도입하기 위해서 공부하고 있습니다. react-testing-library라는, 이름에서도 유추할 수 있듯이 react에 최적화된 테스트용 라이브러리를 이용하여 스터디를 하고 있는데요, 자세한 내용은 추후 포스팅하도록 하겠습니다.</p>\n<p>이번 포스팅을 시작하게 된 계기는, 위 스터디를 진행하면서 router와 관련된 테스트를 하다가 부딪힌 문제들에 대한 해결 방법을 기록해 두고 싶어서입니다. 현재 ‘스무디 한 잔 마시며 끝내는 리액트 + TDD’라는 책으로 공부 중인데요, 해당 책에서 예제로 나오는 부분은 router v5 기반으로 작성되었기 때문에 최신버전인 v6를 설치하여 실습을 하다 보니 다른 점이 많았습니다.</p>\n<p>각설하고 제가 부딪혔던 문제들에 대해 기록해 보겠습니다.</p>\n<h2>Switch → Routes</h2>\n<p>기존 v5 버전에서는 <code class=\"language-text\">route</code> 요소들의 상위를 <code class=\"language-text\">Switch</code> 컴포넌트로 감쌌으나, 이제 명칭이 <code class=\"language-text\">Routes</code>로 변경되었습니다.</p>\n<h2>exact path → path</h2>\n<p><code class=\"language-text\">Route exact path</code>로 사용하던 부분에서 <code class=\"language-text\">exact</code>가 제거되었습니다.</p>\n<h2>component → element</h2>\n<p><code class=\"language-text\">component</code>로 렌더링하거나 또는 <code class=\"language-text\">&lt;Route>{children}&lt;/Route></code> 형태로 사용하던 것을 이제는 <code class=\"language-text\">element</code>라는 요소로 사용할 수 있습니다.</p>\n<p>세 가지 변경 사항을 예시 비교를 통해 보여드리도록 하겠습니다.</p>\n<h3>v5</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Test</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/add\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Add <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Test</code></pre></div>\n<h3>v6</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Routes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Test</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/add\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Add <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Test</code></pre></div>\n<h2>useHistory → useNavigate</h2>\n<p>기존에는 페이지 이동을 위해 <code class=\"language-text\">useHistory</code>를 많이 사용하였으나, 이제 <code class=\"language-text\">useNavigate</code>라는 이름으로 변경되었습니다. 사용법 또한 약간씩 달라졌습니다.</p>\n<p>v5 버전에서는 <code class=\"language-text\">history</code>에서 <code class=\"language-text\">push</code>, <code class=\"language-text\">replace</code>, <code class=\"language-text\">go</code> 등을 사용하였다면, <code class=\"language-text\">navigate</code>에서는 이동 및 back 시에는 <code class=\"language-text\">navigate</code>만 사용하도록 변경되었고, <code class=\"language-text\">replace</code>나 <code class=\"language-text\">state</code>는 옵션으로 사용하도록 변경되었습니다.</p>\n<h3>v5</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useHistory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Test</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">useHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  history<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  history<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Test</code></pre></div>\n<h3>v6</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useNavigate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Test</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> navigate <span class=\"token operator\">=</span> <span class=\"token function\">useHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">replace</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Test</code></pre></div>\n<h2>MemoryRouter</h2>\n<p>사실 여기까지는 검색으로도 쉽게 알 수 있는 내용이고, 제가 적은 것 이외에도 중첩 라우팅, <code class=\"language-text\">useRoutes</code> 등 몇 가지 변경 사항이 더 있는데요,</p>\n<p>실습 중인 코드에서는 <code class=\"language-text\">useParams</code>를 이용하고 있는데, 이것을 이용하면 다음과 같은 코드에서 id를 쉽게 추출할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// App.tsx</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/detail/:id\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Detail <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token comment\">// Detail.tsx</span>\n<span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token function\">useParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 <code class=\"language-text\">useParams</code>를 이용해서 구현한 컴포넌트를 테스트하기 위해서는 history를 제어할 수 있는 router를 사용해야 합니다.</p>\n<p>테스트 코드에서는 실제로 경로 변경을 할 수 없기 때문에 기존에는 react-router가 테스트용으로 제공하는 <code class=\"language-text\">createMemoryHistory</code>를 사용해서 코드를 작성했는데요,</p>\n<p>v5용으로 작성된 예제를 v6에서 어떻게 변경해야 하는지는 쉽게 찾을 수 없었습니다.</p>\n<p>검색을 계속하다가 Testing Library 공식 홈페이지에서 <code class=\"language-text\">MemoryRouter</code>라는 것을 알게 되었습니다.</p>\n<p><code class=\"language-text\">MemoryRoute</code>는 위치를 내부적으로 저장하는 라우터로, history를 제어할 수 있기 때문에 테스트용으로 최적화되어 있는 라우터입니다.</p>\n<p>이번에도 예제를 통해 비교해 보도록 하겠습니다.</p>\n<h3>v5</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createMemoryHistory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'history'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;PageHeader />'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders component correctly'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">createMemoryHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\thistory<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\t\t\t\t<span class=\"token operator\">&lt;</span>PageHeader <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\t\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">...</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>v6</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MemoryRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;PageHeader />'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders component correctly'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>MemoryRouter initialEntries<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>PageHeader <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MemoryRouter<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">...</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>v5에서는 <code class=\"language-text\">Router</code>로 감싼 부분에 <code class=\"language-text\">history(createMemoryHistory)</code>라는 <code class=\"language-text\">prop</code>을 주었으나, v6에서는 따로 <code class=\"language-text\">history</code>를 <code class=\"language-text\">import</code>해올 필요 없이 <code class=\"language-text\">MemoryRouter</code>로 감싼 컴포넌트에 <code class=\"language-text\">initialEntries</code>라는 <code class=\"language-text\">prop</code>으로 URL을 보내는 방식으로 변경되었습니다.</p>\n<p>위와 같이 변경하고 <code class=\"language-text\">npm run test</code> 명령어를 통해 테스트를 수행하였더니 성공적인 결과를 확인할 수 있었습니다.</p>\n<p>(추가)</p>\n<p><code class=\"language-text\">MemoryRouter</code>에 대한 부연 설명을 위해 좀더 검색을 해 보다가 좀더 쉽게 공통화할 수 있는 방법을 찾게 되었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Route<span class=\"token punctuation\">,</span> MemoryRouter<span class=\"token punctuation\">,</span> Routes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">renderWithRouterMatch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\"><span class=\"token literal-property property\">ui</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">route</span><span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n  children<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>MemoryRouter initialEntries<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">typeof</span> route <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>route<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> route<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>children <span class=\"token operator\">&amp;&amp;</span> children<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>path<span class=\"token punctuation\">}</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ui<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>MemoryRouter<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 테스트 코드에서 다음과 같이 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"renders component correctly\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> <span class=\"token string\">'/detail/0'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token string\">'/detail/:id'</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">renderWithRouterMatch</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Detail <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> route<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>(참고 : <a href=\"https://woong-jae.com/react/220717-useParams-testing\">https://woong-jae.com/react/220717-useParams-testing</a>)</p>","frontmatter":{"title":"react router v6에서 react testing libarary 사용하기","date":"January 28, 2023","description":"react router v6에서 변경된 점 (test 포함). react router v6에서 react testing libarary 사용하기","author":"jayoon"}},"previous":{"fields":{"slug":"/gatsby/"},"frontmatter":{"title":"Gatsby로 기술 블로그 만들기"}},"next":{"fields":{"slug":"/nextjs-architecture/"},"frontmatter":{"title":"Next.js 전환 과정 - 기초 설계"}}},"pageContext":{"id":"42cab30b-e464-5d0f-a697-6151a7077207","previousPostId":"e1ddd1d7-883c-5735-bf5a-6808ff359901","nextPostId":"d82ecfc7-8c3d-5d28-b9b0-4f7c9f1a54ab"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}
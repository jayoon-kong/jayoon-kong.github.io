{"componentChunkName":"component---src-templates-blog-post-js","path":"/nextjs-authentication/","result":{"data":{"site":{"siteMetadata":{"title":"공자윤의 기술블로그"}},"markdownRemark":{"id":"747b18b7-ff8b-5239-a05a-3ed52dbf0e82","excerpt":"본 포스팅에서는 로그인 여부에 따라 각자 다른 페이지를 리턴하고, 세션을 관리하는 방법에 대해 작성해 보도록 하겠습니다. 현재 V 컬러링에서는 JWT…","html":"<p>본 포스팅에서는 로그인 여부에 따라 각자 다른 페이지를 리턴하고, 세션을 관리하는 방법에 대해 작성해 보도록 하겠습니다.</p>\n<p>현재 V 컬러링에서는 <strong>JWT</strong> 방식을 이용하여 세션 관리를 하고 있습니다. 사용자가 휴대폰 번호나 소셜 계정으로 로그인을 하면 서버에서는 거기에 맞는 <code class=\"language-text\">access_token</code>을 <code class=\"language-text\">refresh_token</code>과 함께 발급하고, API 호출 시 header에 <code class=\"language-text\">access_token</code>을 실어 보내서 인증을 하고 만료가 되면 <code class=\"language-text\">refresh_token</code>으로 다시 갱신을 하는 구조입니다.</p>\n<p>일반적으로 보안이 우수하다고 알려진 방식은 <code class=\"language-text\">access_token</code>은 받아서 바로 header의 default 값으로 세팅하고, <code class=\"language-text\">refresh_token</code>은 cookie의 <code class=\"language-text\">httpOnly</code> 속성을 사용하는 것입니다.</p>\n<p>기존의 V 컬러링은 그냥 로컬스토리지에 토큰을 저장하여 사용하고 있는데, 이번에 next.js를 도입하면서 세션을 서버 사이드 및 클라이언트 사이드 모두에서 사용할 수 있도록 변경해 보는 것이 좋겠다는 생각이 들었습니다. 특히 my 영역의 경우 APP에서도 웹뷰 형태로 제공되고 있기 때문에 초기 로딩 속도가 느려서, 서버사이드에서 세션 유무를 판단한 후 로그인을 하지 않은 사용자는 로그인 페이지를, 로그인한 사용자는 마이페이지를 바로 띄워 주기로 결정한 점이 가장 큰 이유입니다.</p>\n<p>여러 가지 방법을 검색해 보고 라이브러리도 찾아본 끝에, 결국 양쪽에서 자유롭게 사용하기 위해 토큰을 쿠키에 저장하는 것이 가장 좋겠다는 결론을 내렸습니다. httpOnly 속성을 서버에서 리턴해 주면 좋겠지만 현재 구조적으로 그렇게 설계되어 있지 않고, 또 SSR에서는 로컬스토리지에 접근할 수 없기 때문에 양쪽에서 모두 쓸 수 있는 쿠키로 선택하게 되었습니다.</p>\n<p>먼저 <code class=\"language-text\">react-cookie</code> 라이브러리를 설치하고 로그인 페이지에서 로그인을 하는 로직을 구현한 뒤, 로그인 성공 후 토큰을 쿠키에 저장하는 부분을 구현하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 로그인 성공 이후 처리</span>\nTokenHelper<span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">token</span><span class=\"token operator\">:</span> token<span class=\"token punctuation\">.</span>access_token<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">refreshToken</span><span class=\"token operator\">:</span> token<span class=\"token punctuation\">.</span>refresh_token<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">expired</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> token<span class=\"token punctuation\">.</span>expires_in <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// TokenHelper</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Cookies <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-cookie'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> cookie <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cookies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> VRAuth<span class=\"token punctuation\">.</span>IToken</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">,</span> refreshToken<span class=\"token punctuation\">,</span> expired <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> params<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">expires</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>expired<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshToken'</span><span class=\"token punctuation\">,</span> refreshToken<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">expires</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>expired <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'expired'</span><span class=\"token punctuation\">,</span> expired<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">expires</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>expired<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>로그인은 클라이언트 사이드에서 이루어지기 때문에, 서버 사이드에서 <code class=\"language-text\">getInitialProps</code>으로 접근했을 때 쿠키가 날아가지 않도록 서버 사이드에서도 세팅을 해 줍니다.\n먼저 <code class=\"language-text\">CookiesProvider</code>로 app을 감싸고, 서버의 쿠키를 쉽게 가져올 수 있도록 <code class=\"language-text\">next-cookies</code>를 추가로 설치하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CookiesProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-cookie'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> cookies <span class=\"token keyword\">from</span> <span class=\"token string\">'next-cookies'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>CookiesProvider<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Layout<span class=\"token operator\">></span>\n        <span class=\"token operator\">...</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layout<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>CookiesProvider<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nApp<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getInitialProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> pageProps<span class=\"token punctuation\">,</span> ctx <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">initializeToken</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      Component<span class=\"token punctuation\">,</span>\n      pageProps<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">initializeToken</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">ctx</span><span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">req</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> headers <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> any <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">,</span> refreshToken<span class=\"token punctuation\">,</span> expired <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">cookies</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">&amp;&amp;</span> refreshToken <span class=\"token operator\">&amp;&amp;</span> expired<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    TokenHelper<span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> token<span class=\"token punctuation\">,</span> refreshToken<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">expired</span><span class=\"token operator\">:</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>expired<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 자동 갱신</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>expired<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">updateToken</span><span class=\"token punctuation\">(</span>refreshToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> access_token<span class=\"token punctuation\">,</span> refresh_token<span class=\"token punctuation\">,</span> expires_in <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>access_token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        TokenHelper<span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">token</span><span class=\"token operator\">:</span> access_token<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">refreshToken</span><span class=\"token operator\">:</span> refresh_token<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">expired</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> expires_in <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  TokenHelper<span class=\"token punctuation\">.</span><span class=\"token function\">clearToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다음은 <code class=\"language-text\">my.tsx</code>에서 세션 유무를 체크하여 세션이 없는 경우 로그인 페이지로 리다이렉트 처리를 합니다.\n<code class=\"language-text\">login.tsx</code>에서도 마찬가지로 처리합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// my.tsx</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">getServerSideProps</span><span class=\"token operator\">:</span> <span class=\"token function-variable function\">GetServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> tokenData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">initializeToken</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> query <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> param <span class=\"token operator\">=</span> <span class=\"token function\">searchParams</span><span class=\"token punctuation\">(</span>query <span class=\"token keyword\">as</span> IParameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tokenData <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>tokenData<span class=\"token operator\">?.</span>token <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>tokenData<span class=\"token operator\">?.</span>expired<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EnvChecker<span class=\"token punctuation\">.</span><span class=\"token function\">isApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/login?my</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&amp;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">permanent</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">memo</span><span class=\"token punctuation\">(</span>My<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// login.tsx</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">getServerSideProps</span><span class=\"token operator\">:</span> <span class=\"token function-variable function\">GetServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> query <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> param <span class=\"token operator\">=</span> <span class=\"token function\">searchParams</span><span class=\"token punctuation\">(</span>query <span class=\"token keyword\">as</span> IParameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> tokenData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">initializeToken</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tokenData <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>tokenData<span class=\"token operator\">?.</span>expired<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>param<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">permanent</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 했더니 로그인 페이지에서 세션이 없는 경우에는 로그인 페이지가, 세션이 있는 경우에는 마이 페이지가 리턴되었습니다. 그리고 로그아웃 후 로그인 시에도 자연스럽게 화면이 전환되는 것을 확인할 수 있었습니다.</p>\n<p>가장 삽질을 많이 했지만 많이 배울 수 있었던 경험이었습니다. 😊</p>","frontmatter":{"title":"Next.js 전환 과정 - 인증 및 토큰 처리하기","date":"May 26, 2023","description":"React로 구현된 SPA (CSR) 프로젝트를 Next.js로 전환하는 과정","author":"jayoon"}},"previous":{"fields":{"slug":"/nextjs-reactquery-useinfinitequery/"},"frontmatter":{"title":"Next.js 전환 과정 - Infinite scroll 데이터에 react query 적용하기"}},"next":{"fields":{"slug":"/nextjs-refresh-token/"},"frontmatter":{"title":"Next.js 전환 과정 - 자동로그인 (토큰 갱신)"}}},"pageContext":{"id":"747b18b7-ff8b-5239-a05a-3ed52dbf0e82","previousPostId":"553ca892-f753-50be-8a67-0948af59f705","nextPostId":"fce8c886-0c77-5b29-bc6d-08bb3c08f0f1"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}